<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Typewriter</title>
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
    }

    .background {
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: black;
      opacity: 0;
    }

    .container {
      position: absolute;
      width: 80%;
      height: 80%;
      top: 10%;
      left: 10%;
      color: white;
      overflow: hidden;
    }

    p {
      margin: 0;
      line-height: 1.5;
      white-space: nowrap;
    }
  </style>
</head>
<body>
  <div class="background"></div>
  <div class="container"></div>

  <script>
    const background = document.querySelector(".background");

    function fadeIn(element, duration) {
      let opacity = 0;
      const interval = 10;
      const step = interval / (duration / 1000);

      const fadeInInterval = setInterval(() => {
        opacity += step;
        if (opacity >= 1) {
          clearInterval(fadeInInterval);
          opacity = 1;
        }
        element.style.opacity = opacity;
      }, interval);
    }

    fadeIn(background, 2000);

    async function fetchText() {
      const response = await fetch("text.txt");
      const text = await response.text();
      return text;
    }

    function splitIntoChunks(text, maxWords) {
      const words = text.split(/\s+/);
      const chunks = [];

      while (words.length) {
        chunks.push(words.splice(0, maxWords).join(" "));
      }

      return chunks;
    }

    async function init() {
      const text = await fetchText();
      const chunks = splitIntoChunks(text, 100);
      const container = document.querySelector(".container");

      let currentChunk = 0;
      let index = 0;
      let textElement;
      let typingInProgress = false;
      let typeInterval;

      function createParagraph() {
        const paragraph = document.createElement("p");
        container.appendChild(paragraph);
        return paragraph;
      }

      function typeText() {
        textElement = createParagraph();
        typingInProgress = true;

        typeInterval = setInterval(() => {
          if (index < chunks[currentChunk].length) {
            textElement.textContent += chunks[currentChunk].charAt(index);
            index++;
          } else {
            clearInterval(typeInterval);
            typingInProgress = false;
            index = 0;
            setTimeout(() => {
              container.removeChild(textElement);
              nextChunk();
            }, 1000);
          }
        }, 50);
      }

      function nextChunk() {
        if (currentChunk < chunks.length - 1) {
          currentChunk++;
          typeText();
        }
      }

      document.addEventListener("click", nextChunk);
      document.addEventListener("keydown", (e) => {
        if (e.code === "Space") {
          e.preventDefault();
          nextChunk();
        }
      });

      typeText();
    }

    init();
  </script>
</body>
</html>
